<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>开发常用工具</title>
      <link href="2021/09/01/kai-fa-chang-yong-gong-ju/"/>
      <url>2021/09/01/kai-fa-chang-yong-gong-ju/</url>
      
        <content type="html"><![CDATA[<h1 id="开发常用工具"><a href="#开发常用工具" class="headerlink" title="开发常用工具"></a>开发常用工具</h1><table><thead><tr><th align="center">名称</th><th align="center">地址</th></tr></thead><tbody><tr><td align="center">配色</td><td align="center"><a href="https://webgradients.com/">https://webgradients.com/</a></td></tr><tr><td align="center">格式化校验</td><td align="center"><a href="https://www.bejson.com/">https://www.bejson.com/</a></td></tr><tr><td align="center">在线生成二维码</td><td align="center"><a href="https://cli.im/">https://cli.im/</a></td></tr><tr><td align="center">安卓在线生成keystore</td><td align="center"><a href="http://www.applicationloader.net/appuploader/keystore.php">http://www.applicationloader.net/appuploader/keystore.php</a></td></tr><tr><td align="center">路过图床</td><td align="center"><a href="https://imgtu.com/">https://imgtu.com/</a></td></tr><tr><td align="center">聚合图床</td><td align="center"><a href="https://www.superbed.cn/">https://www.superbed.cn/</a></td></tr><tr><td align="center">字体图标库</td><td align="center"><a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a></td></tr><tr><td align="center">css动画库</td><td align="center"><a href="https://animate.style/">https://animate.style/</a></td></tr><tr><td align="center">高清大图（免费素材）</td><td align="center"><a href="https://wallroom.io/">https://wallroom.io/</a></td></tr><tr><td align="center">高清图库</td><td align="center"><a href="https://www.pexels.com/">https://www.pexels.com/</a></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 开发常用工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git的使用</title>
      <link href="2021/05/20/git-de-shi-yong/"/>
      <url>2021/05/20/git-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="git下载及常用命令"><a href="#git下载及常用命令" class="headerlink" title="git下载及常用命令"></a>git下载及常用命令</h1><h2 id="git下载"><a href="#git下载" class="headerlink" title="git下载"></a>git下载</h2><p><a href="https://git-scm.com/downloads">git下载</a></p><p><a href="https://zhuanlan.zhihu.com/p/87812360">git详细安装教程</a></p><h2 id="git常用命令"><a href="#git常用命令" class="headerlink" title="git常用命令"></a>git常用命令</h2><h4 id="将服务器上的代码给拉下来"><a href="#将服务器上的代码给拉下来" class="headerlink" title="将服务器上的代码给拉下来"></a>将服务器上的代码给拉下来</h4><pre class="line-numbers language-none"><code class="language-none">$ git clone + 地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="将服务器上的代码给拉下来并切换到目标分支"><a href="#将服务器上的代码给拉下来并切换到目标分支" class="headerlink" title="将服务器上的代码给拉下来并切换到目标分支"></a>将服务器上的代码给拉下来并切换到目标分支</h4><pre class="line-numbers language-none"><code class="language-none">$ git checkout -b 目标分支 地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="切换到指定分支"><a href="#切换到指定分支" class="headerlink" title="切换到指定分支"></a>切换到指定分支</h4><pre class="line-numbers language-none"><code class="language-none">$ git checkout 分支名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="添加当前目录的所有文件到暂存区"><a href="#添加当前目录的所有文件到暂存区" class="headerlink" title="添加当前目录的所有文件到暂存区"></a>添加当前目录的所有文件到暂存区</h4><pre class="line-numbers language-none"><code class="language-none">$ git add .<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="提交暂存区到仓库区"><a href="#提交暂存区到仓库区" class="headerlink" title="提交暂存区到仓库区"></a>提交暂存区到仓库区</h4><pre class="line-numbers language-none"><code class="language-none">$ git commit -m 'message'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="将本地分支推送到服务器上去。"><a href="#将本地分支推送到服务器上去。" class="headerlink" title="将本地分支推送到服务器上去。"></a>将本地分支推送到服务器上去。</h4><pre class="line-numbers language-none"><code class="language-none">$ git push<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="查看本地所有分支"><a href="#查看本地所有分支" class="headerlink" title="查看本地所有分支"></a>查看本地所有分支</h4><pre class="line-numbers language-none"><code class="language-none">$ git branch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="列出所有远程分支"><a href="#列出所有远程分支" class="headerlink" title="列出所有远程分支"></a>列出所有远程分支</h4><pre class="line-numbers language-none"><code class="language-none">$ git branch -r<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="本地与服务器端同步"><a href="#本地与服务器端同步" class="headerlink" title="本地与服务器端同步"></a>本地与服务器端同步</h4><pre class="line-numbers language-none"><code class="language-none">$ git pull<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="查看用户名和邮箱地址"><a href="#查看用户名和邮箱地址" class="headerlink" title="查看用户名和邮箱地址"></a>查看用户名和邮箱地址</h4><pre class="line-numbers language-none"><code class="language-none">$ git config user.name$ git config user.email<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="修改用户名和邮箱地址"><a href="#修改用户名和邮箱地址" class="headerlink" title="修改用户名和邮箱地址"></a>修改用户名和邮箱地址</h4><pre class="line-numbers language-none"><code class="language-none">$ git config --global user.name "username"$ git config --global user.email "email"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="更多git命令"><a href="#更多git命令" class="headerlink" title="更多git命令"></a>更多git命令</h2><p>点击查看:<a href="https://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html">作者阮一峰整理git命令</a><br>点击查看:<a href="https://blog.csdn.net/halaoda/article/details/78661334">作者halaoda整理git命令</a></p>]]></content>
      
      
      <categories>
          
          <category> Git常用命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>live2d动漫人</title>
      <link href="2021/05/19/live2d-dong-man-ren/"/>
      <url>2021/05/19/live2d-dong-man-ren/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo博客添加live2d卡通人物"><a href="#Hexo博客添加live2d卡通人物" class="headerlink" title="Hexo博客添加live2d卡通人物"></a>Hexo博客添加live2d卡通人物</h1><h3 id="安装hexo-helper-live2d"><a href="#安装hexo-helper-live2d" class="headerlink" title="安装hexo-helper-live2d"></a>安装hexo-helper-live2d</h3><pre class="line-numbers language-none"><code class="language-none">$ npm install --save hexo-helper-live2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="选择安装喜欢的素材包"><a href="#选择安装喜欢的素材包" class="headerlink" title="选择安装喜欢的素材包"></a>选择安装喜欢的素材包</h3><pre class="line-numbers language-none"><code class="language-none">$ npm install  live2d-widget-model-{name}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="素材包一览"><a href="#素材包一览" class="headerlink" title="素材包一览"></a>素材包一览</h3><p><kbd><a href="https://blog.csdn.net/u012931864/article/details/83054822">素材包地址https://blog.csdn.net/u012931864/article/details/83054822</a></kbd></p><h2 id="示例"><a href="#示例" class="headerlink" title="示例:"></a>示例:</h2><p><img src="/img/cartoon.png" alt="koharu"></p><p>素材包地址每张图片的name就是需要替换的名字，将喜欢的卡通人物名字记住</p><pre class="line-numbers language-none"><code class="language-none">$ npm install  live2d-widget-model-koharu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置:<br>在Hexo站点配置文件_config.yml，或者主题配置文件_config.yml中添加如下配置<br>每次更换卡通人物就需要更换 live2d.model.use 的内容</p><pre class="line-numbers language-none"><code class="language-none">live2d:  enable: true  scriptFrom: local  pluginRootPath: live2dw/  pluginJsPath: lib/  pluginModelPath: assets/  tagMode: false  log: false  model:    use: live2d-widget-model-koharu  display:    position: right    width: 150    height: 300  mobile:    show: true  react:    opacity: 0.7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 卡通人物 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 卡通人物 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义table</title>
      <link href="2021/05/19/zi-ding-yi-biao-ge/"/>
      <url>2021/05/19/zi-ding-yi-biao-ge/</url>
      
        <content type="html"><![CDATA[<h1 id="自定义table-用于复杂的表格样式"><a href="#自定义table-用于复杂的表格样式" class="headerlink" title="自定义table 用于复杂的表格样式"></a>自定义table 用于复杂的表格样式</h1><h2 id="简洁table"><a href="#简洁table" class="headerlink" title="简洁table"></a>简洁table</h2><pre class="line-numbers language-none"><code class="language-none">&lt;template&gt;    &lt;div id="sketchMap"&gt;        &lt;section id="sketchTable"&gt;            &lt;table style="width: 100%"&gt;                &lt;tbody&gt;                    &lt;template v-for="(group,index) in 3"&gt;                        &lt;tr v-if="index == 0"&gt;                            &lt;td&gt;表头1&lt;/td&gt;                            &lt;td&gt;表头2&lt;/td&gt;                            &lt;td&gt;表头3&lt;/td&gt;                            &lt;td&gt;表头4&lt;/td&gt;                        &lt;/tr&gt;                        &lt;template&gt;                            &lt;tr&gt;                                &lt;td&gt;表格1&lt;/td&gt;                                &lt;td&gt;表格2&lt;/td&gt;                                &lt;td&gt;表格3&lt;/td&gt;                                &lt;td&gt;表格4&lt;/td&gt;                            &lt;/tr&gt;                        &lt;/template&gt;                    &lt;/template&gt;                &lt;/tbody&gt;            &lt;/table&gt;        &lt;/section&gt;    &lt;/div&gt;&lt;/template&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CSS样式:</p><pre class="line-numbers language-none"><code class="language-none">#sketchMap {    font-family: "宋体";    padding: 0;    margin: 0;    h4 {        font-size: 27px;        margin: 10px;        text-align: center;    }}#sketchTable {    text-align: center;    table {        border: 1px solid #E4E7ED !important;        border-collapse: collapse;        font-size: 15px;        color: #409EFF;        //   margin:20px 0;        th {            border: 1.5px solid #E4E7ED;        }        td {            border: 1px solid #E4E7ED;            width: 100px;            padding: 14px 0;        }        td:first-child {            padding-left: 5px;            width: 130px;            text-align: center;        }        tr:nth-child(2n) {            background: #F5F5F5;        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如下图:<br><img src="/img/table.png"></p><h2 id="复杂样式"><a href="#复杂样式" class="headerlink" title="复杂样式"></a>复杂样式</h2><pre class="line-numbers language-none"><code class="language-none">&lt;template&gt;    &lt;div id="sketchMap"&gt;        &lt;h4&gt;自定义表格&lt;/h4&gt;        &lt;section id="sketchTable"&gt;            &lt;table v-for = "(group,index) in list" :key="index" style="width: 100%"&gt;                &lt;tbody&gt;                &lt;template&gt;                    &lt;tr v-if="index == 0"&gt;                    &lt;td&gt;表头1&lt;/td&gt;                    &lt;td&gt;表头2&lt;/td&gt;                    &lt;td&gt;表头3&lt;/td&gt;                    &lt;td v-for= "(item2,index2) in group.cells" :key="index2"&gt;{{item2.time}}&lt;/td&gt;                                    &lt;/tr&gt;                    &lt;template&gt;                    &lt;tr&gt;                        &lt;td style="border:none;"&gt;&lt;/td&gt;                        &lt;td&gt;name1&lt;/td&gt;                        &lt;td&gt;{{group.a}}&lt;/td&gt;                        &lt;td v-for= "(item,index) in group.cells" :key="index+'gmv'"&gt;{{item.gmv}}&lt;/td&gt;                                    &lt;/tr&gt;                    &lt;tr&gt;                        &lt;td style="border:none;"&gt;&lt;/td&gt;                        &lt;td&gt;name2&lt;/td&gt;                        &lt;td&gt;{{group.b}}&lt;/td&gt;                        &lt;td v-for= "(item,index) in group.cells" :key="index+'ri'"&gt;{{item.ri}}&lt;/td&gt;                                    &lt;/tr&gt;                    &lt;tr&gt;                        &lt;td style="border:none;"&gt;name&lt;/td&gt;                        &lt;td&gt;name3&lt;/td&gt;                        &lt;td&gt;{{group.c}}&lt;/td&gt;                        &lt;td v-for= "(item,index) in group.cells" :key="index+'kai'"&gt;{{item.kai}}&lt;/td&gt;                                    &lt;/tr&gt;                    &lt;tr&gt;                        &lt;td style="border:none;"&gt;&lt;/td&gt;                        &lt;td&gt;name4&lt;/td&gt;                        &lt;td&gt;{{group.d}}&lt;/td&gt;                        &lt;td v-for= "(item,index) in group.cells" :key="index+'xin'"&gt;{{item.xin}}&lt;/td&gt;                                    &lt;/tr&gt;                    &lt;tr&gt;                        &lt;td style="border:none;"&gt;&lt;/td&gt;                        &lt;td&gt;name5&lt;/td&gt;                        &lt;td&gt;{{group.e}}&lt;/td&gt;                        &lt;td v-for= "(item,index) in group.cells" :key="index+'ke'"&gt;{{item.ke}}&lt;/td&gt;                                  &lt;/tr&gt;                    &lt;/template&gt;                &lt;/template&gt;                &lt;/tbody&gt;            &lt;/table&gt;        &lt;/section&gt;    &lt;/div&gt;&lt;/template&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CSS样式:</p><pre class="line-numbers language-none"><code class="language-none">#sketchMap {    font-family: "宋体";    padding:0;    margin:0;    h4 {        font-size:27px;        margin:10px;        text-align:center;    }}#sketchTable {    text-align:center;    table {        border: 1px solid #C0C4CC !important;        border-collapse:collapse;        font-size:15px;        margin:20px 0;        th {            border:1.5px solid #C0C4CC;        }        td{            border:1px solid #C0C4CC;            width:100px;        }        td:first-child{            padding-left:5px;            width:130px;            text-align:left;        }        th:nth-child(2),td:nth-child(2) {            text-align: left;        }        th:nth-child(3),td:nth-child(3) {            text-align: left;        }        td:nth-child(2){            padding-left:3px;        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如下图:<br><img src="/img/table2.png"></p>]]></content>
      
      
      <categories>
          
          <category> 自定义table </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> table </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 文章写法</title>
      <link href="2021/05/19/hexo-wen-zhang-xie-fa/"/>
      <url>2021/05/19/hexo-wen-zhang-xie-fa/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1808492017&amp;auto=1&amp;height=66"></iframe><h1 id="Markdown基本语法"><a href="#Markdown基本语法" class="headerlink" title="Markdown基本语法"></a>Markdown基本语法</h1><h2 id="1、字体介绍"><a href="#1、字体介绍" class="headerlink" title="1、字体介绍"></a>1、字体介绍</h2><p><em>这是斜体</em> 或 <em>这也是斜体</em></p><pre class="line-numbers language-none"><code class="language-none">*这是斜体* 或 _这也是斜体_<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>这是粗体</strong></p><pre class="line-numbers language-none"><code class="language-none">**这是粗体**<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em><strong>这是加粗斜体</strong></em></p><pre class="line-numbers language-none"><code class="language-none">***这是加粗斜体***<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><del>这是删除线</del></p><pre class="line-numbers language-none"><code class="language-none">~~这是删除线~~<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><u>带下划线文本</u></p><pre class="line-numbers language-none"><code class="language-none">&lt;u&gt;带下划线文本&lt;/u&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2、分级标题"><a href="#2、分级标题" class="headerlink" title="2、分级标题"></a>2、分级标题</h2><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><pre class="line-numbers language-none"><code class="language-none"># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、超链接"><a href="#3、超链接" class="headerlink" title="3、超链接"></a>3、超链接</h2><p>行内形式：<a href="https://jiuri99.github.io/">我的博客</a></p><pre class="line-numbers language-none"><code class="language-none">行内形式：[我的博客](https://jiuri99.github.io/)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参考形式：[我的博客][1]，有一个很好的平台-[简书][2]<br>[1]:<a href="https://jiuri99.github.io/">https://jiuri99.github.io/</a><br>[2]:<a href="http://www.jianshu.com/">http://www.jianshu.com/</a></p><pre class="line-numbers language-none"><code class="language-none">参考形式：[我的博客][1]，有一个很好的平台-[简书][2][1]:https://jiuri99.github.io/[2]:http://www.jianshu.com/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>自动链接：我的博客地址<a href="https://xfbxfbxfb.github.io/">https://xfbxfbxfb.github.io/</a></p><pre class="line-numbers language-none"><code class="language-none">自动链接：我的博客地址&lt;https://jiuri99.github.io/&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4、列表"><a href="#4、列表" class="headerlink" title="4、列表"></a>4、列表</h2><p>无序列表：</p><ul><li>无序列表项1</li></ul><ul><li>无序列表项2</li></ul><ul><li>无序列表项3</li></ul><pre class="line-numbers language-none"><code class="language-none">* 无序列表项1+ 无序列表项2- 无序列表项3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>有序列表：<br>1.有序列表项1<br>2.有序列表项2<br>3.有序列表项3</p><pre class="line-numbers language-none"><code class="language-none">1.有序列表项12.有序列表项23.有序列表项3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="5、插入图片"><a href="#5、插入图片" class="headerlink" title="5、插入图片"></a>5、插入图片</h2><p>在 Hexo 中插入图片，首先需要将图片放在 source/img/ 文件夹下（将本地的路径放入到小括号里），如果用网上的原图的话只需将URL放入到括号里，然后如下方式进行插入：<br>其中方括号是图片描述，圆括号是图片路径<br><img src="https://img0.baidu.com/it/u=233301930,3031623456&amp;fm=11&amp;fmt=auto&amp;gp=0.jpg"></p><pre class="line-numbers language-none"><code class="language-none">![](https://img0.baidu.com/it/u=233301930,3031623456&amp;fm=11&amp;fmt=auto&amp;gp=0.jpg)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>本地的需要npm install hexo-renderer-marked安装图片插件，之后在config.yaml中更改配置如下</p><pre class="line-numbers language-none"><code class="language-none">post_asset_folder: truemarked:  prependRoot: true  postAsset: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>之后就可以在使用的 <kbd>![](image.jpg)</kbd>方式愉快的插入图片了。</p><h2 id="6、表格"><a href="#6、表格" class="headerlink" title="6、表格"></a>6、表格</h2><table><thead><tr><th>表头1</th><th align="left">表头2</th><th align="center">表头3</th><th align="right">表头4</th></tr></thead><tbody><tr><td>默认左对齐</td><td align="left">左对齐</td><td align="center">居中对其</td><td align="right">右对齐</td></tr><tr><td>默认左对齐</td><td align="left">左对齐</td><td align="center">居中对其</td><td align="right">右对齐</td></tr><tr><td>默认左对齐</td><td align="left">左对齐</td><td align="center">居中对其</td><td align="right">右对齐</td></tr></tbody></table><pre class="line-numbers language-none"><code class="language-none">表头1|表头2|表头3|表头4-| :- | :-: | -: |默认左对齐|左对齐|居中对其|右对齐默认左对齐|左对齐|居中对其|右对齐默认左对齐|左对齐|居中对其|右对齐<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7、分割线"><a href="#7、分割线" class="headerlink" title="7、分割线"></a>7、分割线</h2><p>三个或者三个以上的 - 或者 * 都可以。</p><hr><hr><hr><hr><pre class="line-numbers language-none"><code class="language-none">-------********<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7、引用"><a href="#7、引用" class="headerlink" title="7、引用"></a>7、引用</h2><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;n个…</p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><pre class="line-numbers language-none"><code class="language-none">&gt;这是引用的内容&gt;&gt;这是引用的内容&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="8、高级技巧"><a href="#8、高级技巧" class="headerlink" title="8、高级技巧"></a>8、高级技巧</h2><p>目前支持的 HTML 元素有&lt;&gt;：kbd b i em sup sub br等 ，如：</p><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><pre class="line-numbers language-none"><code class="language-none">&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>转义<br>** 正常显示星号 **</p><pre class="line-numbers language-none"><code class="language-none">\*\* 正常显示星号 \*\*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>目前支持一下符号</p><pre class="line-numbers language-none"><code class="language-none">\   反斜线`   反引号*   星号_   下划线{}  花括号[]  方括号()  小括号#   井字号+   加号-   减号.   英文句点!   感叹号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Markdown基本语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端有价值的博客汇总</title>
      <link href="2021/05/18/you-jie-zhi-de-hui-zong/"/>
      <url>2021/05/18/you-jie-zhi-de-hui-zong/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1814080666&amp;auto=1&amp;height=66"></iframe><h2 id="Web前端有价值的博客汇总"><a href="#Web前端有价值的博客汇总" class="headerlink" title="Web前端有价值的博客汇总"></a>Web前端有价值的博客汇总</h2><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><p>1.href和src的区别：<a href="https://blog.csdn.net/annsheshira23/article/details/51133709">https://blog.csdn.net/annsheshira23/article/details/51133709</a><br>              <a href="https://www.jianshu.com/p/dadbb8f8a952">https://www.jianshu.com/p/dadbb8f8a952</a></p><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><p>1.深入理解position和z-index属性 ：<a href="https://www.cnblogs.com/zhuzhenwei918/p/6112034.html">https://www.cnblogs.com/zhuzhenwei918/p/6112034.html</a></p><p>2.BFC（清除浮动的原理）：<a href="https://www.cnblogs.com/wuguoyuan/archive/2016/07/23/bfc.html">https://www.cnblogs.com/wuguoyuan/archive/2016/07/23/bfc.html</a></p><p>3.rem和em的解释：<a href="https://www.w3cplus.com/css/rem-vs-em.html">https://www.w3cplus.com/css/rem-vs-em.html</a></p><p>4.css选择器优先级：<a href="https://www.cnblogs.com/zxjwlh/p/6213239.html">https://www.cnblogs.com/zxjwlh/p/6213239.html</a></p><p>5.css hack：<a href="http://blog.csdn.net/dayu9216/article/details/70225261">http://blog.csdn.net/dayu9216/article/details/70225261</a></p><p>6.负边距的作用：<a href="http://blog.csdn.net/u013848401/article/details/52453034">http://blog.csdn.net/u013848401/article/details/52453034</a></p><p>7.圣杯布局和双飞翼布局：<a href="https://www.cnblogs.com/woodk/p/5147085.html">https://www.cnblogs.com/woodk/p/5147085.html</a></p><h3 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h3><p>1.DOM中Property和Attribute的区别：<a href="http://web.jobbole.com/83129/">http://web.jobbole.com/83129/</a></p><p>2.js在html中加载的顺序（包含了变量提升、函数提升的原理）：<a href="https://www.cnblogs.com/CBDoctor/p/3745246.html">https://www.cnblogs.com/CBDoctor/p/3745246.html</a> (文章写得好，但个人认为有点杂，将不同的知识点都放在了同一个地方)</p><p>3.闭包：<a href="https://www.cnblogs.com/chuntaoj/p/5996216.html">https://www.cnblogs.com/chuntaoj/p/5996216.html</a></p><p>4.HTML元素与事件绑定（分析DOM事件响应的三个阶段，以click事件为例）：<a href="https://my.oschina.net/u/1454562/blog/205010">https://my.oschina.net/u/1454562/blog/205010</a></p><p>5.捕获/阻止捕获、冒泡/阻止冒泡：<a href="https://www.cnblogs.com/zhuzhenwei918/p/6139880.html">https://www.cnblogs.com/zhuzhenwei918/p/6139880.html</a></p><p>6.循环添加事件：<a href="https://www.cnblogs.com/dongdongseven/p/7141146.html">https://www.cnblogs.com/dongdongseven/p/7141146.html</a></p><p>7.event.target与this的区别：<a href="https://www.cnblogs.com/liululin/p/5898787.html">https://www.cnblogs.com/liululin/p/5898787.html</a></p><p>8.caller和callee：<a href="http://blog.csdn.net/laijieyao/article/details/43404953">http://blog.csdn.net/laijieyao/article/details/43404953</a></p><p>9.prototype详解：<a href="http://www.jb51.net/article/91826.htm">http://www.jb51.net/article/91826.htm</a></p><p>10.this指向：<a href="https://www.cnblogs.com/pssp/p/5216085.html">https://www.cnblogs.com/pssp/p/5216085.html</a></p><p>11.JS中函数参数传递方式：<a href="https://www.cnblogs.com/chenwenhao/p/7009606.html">https://www.cnblogs.com/chenwenhao/p/7009606.html</a></p><p>12.typeof用法：<a href="http://blog.csdn.net/z18842589113/article/details/53315910">http://blog.csdn.net/z18842589113/article/details/53315910</a></p><p>13.深拷贝与浅拷贝：<a href="https://www.zhihu.com/question/23031215">https://www.zhihu.com/question/23031215</a></p><p>14.事件委托：<a href="https://www.cnblogs.com/sxz2008/p/6393232.html">https://www.cnblogs.com/sxz2008/p/6393232.html</a></p><p>              <a href="https://www.cnblogs.com/liugang-vip/p/5616484.html">https://www.cnblogs.com/liugang-vip/p/5616484.html</a></p><p>15.bind,call,apply：<a href="https://www.cnblogs.com/libin-1/p/6069031.html">https://www.cnblogs.com/libin-1/p/6069031.html</a></p><p>16.实现继承的方式：<a href="https://www.cnblogs.com/humin/p/4556820.html">https://www.cnblogs.com/humin/p/4556820.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Web前端开发学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人整理笔记</title>
      <link href="2020/04/01/ge-ren-zheng-li-bi-ji/"/>
      <url>2020/04/01/ge-ren-zheng-li-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="代码笔记"><a href="#代码笔记" class="headerlink" title="代码笔记"></a>代码笔记</h1><h2 id="密码显示部分数字"><a href="#密码显示部分数字" class="headerlink" title="密码显示部分数字"></a>密码显示部分数字</h2><pre class="line-numbers language-none"><code class="language-none">&lt;template v-slot="{row}"&gt;{{getBankNo(row.bankCardNo(银行卡号/身份证等))}}&lt;/template&gt;computed:    getBankNo() {        return function(bankCardNo) {            return bankCardNo.substring(0, 4) + '********' + bankCardNo.substring(bankCardNo.length - 4, bankCardNo.length);    };}//电话data.phone.substring(0,3)+'****'+data.phone.substring(7,11)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h2><pre class="line-numbers language-none"><code class="language-none">this.memberList = this.filterArr(arr,'key')//方法赋值filterArr(arr, name) {    let hash = {};    return arr.reduce((ss, item) =&gt; {        hash[item[name]] ? '' : hash[item[name]] = true &amp;&amp; ss.push(item);        return ss;    }, []);},<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数组长度变更"><a href="#数组长度变更" class="headerlink" title="数组长度变更"></a>数组长度变更</h2><pre class="line-numbers language-none"><code class="language-none"> this.newList = this.group(this.list, 4)   //分为4份为一组 group(array, subGroupLength) {    let index = 0;    let newArray = [];    while (index &lt; array.length) {        newArray.push(array.slice(index, index += subGroupLength));    }    return newArray;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><pre class="line-numbers language-none"><code class="language-none">this.item2.sort(function (a, b) {    var x = 'shopSort'//要排序字段    if (a[x] &lt; b[x]) {        return -1    }    if (a[x] &gt; b[x]) {        return 1    }    return 0;});<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="hasOwnProperty-判断自身属性与继承属性"><a href="#hasOwnProperty-判断自身属性与继承属性" class="headerlink" title="hasOwnProperty 判断自身属性与继承属性"></a>hasOwnProperty 判断自身属性与继承属性</h2><pre class="line-numbers language-none"><code class="language-none">for (const key in res.data) {    if (this.form.hasOwnProperty(key)) {        this.form['roleIdArray'] = res.data['roleModelList'].map(el =&gt; {return el.id})this.form[key] = res.data[key]}}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="节流"><a href="#节流" class="headerlink" title="节流"></a>节流</h2><pre class="line-numbers language-none"><code class="language-none">// 节流export function throttle(fn,wait = 500,isImmediate = false){  let flag = true;  if(isImmediate){    return function(){      if(flag) {        fn.apply(this,arguments);        flag = false;        setTimeout(() =&gt; {          flag = true        },wait)      }    }  }  return function(){    if(flag == true){      flag = false       setTimeout(() =&gt; {        fn.apply(this,arguments)        flag = true      },wait)    }  }}//使用方法addFarmer: throttle(function (formName) {}, 1000, true),<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="vue-js获得包括今天过去一周（7天）的时间"><a href="#vue-js获得包括今天过去一周（7天）的时间" class="headerlink" title="vue-js获得包括今天过去一周（7天）的时间"></a>vue-js获得包括今天过去一周（7天）的时间</h2><pre class="line-numbers language-none"><code class="language-none">let a=new Date() - 60000*60*24 //获得过去一天的时间//本地时间，当减去时间戳会自动转换为时间戳let b=new Date() - 60000*60*24*7 //获得过去一天的时间const time = new Date(b) //将时间戳转为标准事件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="input限制输入内容"><a href="#input限制输入内容" class="headerlink" title="input限制输入内容"></a>input限制输入内容</h2><p>方法一:</p><pre class="line-numbers language-none"><code class="language-none">//input里面直接加onkeyup="this.value=this.value.replace(/[^\d]/g,'') "<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>方法二:</p><pre class="line-numbers language-none"><code class="language-none">@keyup.native="handleNum($event,1)"//输入框限制handleNum(e,index){    e.target.value = e.target.value.replace(/[^\d]/g,""); //清除“数字”以外的字符    e.target.value = e.target.value.replace(/[^\d.]/g,""); //清除“数字”和“.”以外的字符    e.target.value = e.target.value.replace(/\.{2,}/g,".");//只保留第一个. 清除多余的     e.target.value = e.target.value.replace(".","$#$").replace(/\./g,"").replace("$#$","."); //只允许出现一个.    e.target.value = e.target.value.replace(/^(\-)*(\d+)\.(\d).*$/,'$1$2.$3');//只能输入一个小数     e.target.value = e.target.value.replace(/^(\-)*(\d+)\.(\d\d).*$/,'$1$2.$3');//只能输入两个小数     if(e.target.value.indexOf(".")&lt; 0 &amp;&amp; e.target.value !=""){//以上已经过滤，此处控制的是如果没有小数点，首位不能为类似于 01、02的金额         e.target.value= parseFloat(e.target.value);     }     if(e.target.value =='.'){        e.target.value = '0'+e.target.value    }},<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="input失去焦点"><a href="#input失去焦点" class="headerlink" title="input失去焦点"></a>input失去焦点</h2><pre class="line-numbers language-none"><code class="language-none">@blur="blurstorage(value)"//当input失去焦点后返回blurstorage(val){    console.log(val)},<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="vue-count-to数字滚动插件"><a href="#vue-count-to数字滚动插件" class="headerlink" title="vue-count-to数字滚动插件"></a>vue-count-to数字滚动插件</h2><pre class="line-numbers language-none"><code class="language-none">//没有安装的npm install vue-count-to//安装后&lt;template&gt;  &lt;countTo :startVal='startVal' :endVal='endVal' :duration='3000'&gt;&lt;/countTo&gt;&lt;/template&gt;&lt;script&gt;  import countTo from 'vue-count-to';  export default {    components: { countTo },    data () {      return {        startVal: 0,        endVal: 2017      }    }  }&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Animate动画"><a href="#Animate动画" class="headerlink" title="Animate动画"></a>Animate动画</h2><pre class="line-numbers language-none"><code class="language-none">&lt;div class="animated"&gt;&lt;/div&gt;&lt;link rel="stylesheet" href="../../css/animate.min.css"&gt;//鼠标移入animate动画效果$('body').on('mouseenter', '.product-mouse', function () {$(this).addClass('pulse')setTimeout(() =&gt; {$(this).removeClass('pulse')}, 800)})<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><kbd><a href="https://www.dowebok.com/demo/2014/98/">Animate.css动画演示</a></kbd></p><h2 id="findindex方法"><a href="#findindex方法" class="headerlink" title="findindex方法"></a>findindex方法</h2><pre class="line-numbers language-none"><code class="language-none">this.form = res.data;const item = this.form.groupId;//一个对象（数字）//this.group是一个数组var index=this.group.findIndex((value)=&gt;value.id==item);//index == -1 没有对象  如果有会换回索引位置if (index == -1 ) {    //没有找到索引位置}else {    //返回索引位置}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="时间默认当月01至当日"><a href="#时间默认当月01至当日" class="headerlink" title="时间默认当月01至当日"></a>时间默认当月01至当日</h2><pre class="line-numbers language-none"><code class="language-none">getTime(){    var date = new Date()    var month = parseInt(date.getMonth()+1)    var day = date.getDate()    if(month &lt; 10){ month = '0'+month }    if(day &lt; 10){day = '0'+day}    //当前月的开始  默认为01日    this.listQuery.startTime = date.getFullYear() + '-' + month + '-01'    //当前月当前时间 日期    this.listQuery.endTime = date.getFullYear() + '-' + month + '-' + day    //将时间绑定到时间选择器上    this.betweenDate =[this.listQuery.startTime,this.listQuery.endTime]}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="倒计时"><a href="#倒计时" class="headerlink" title="倒计时"></a>倒计时</h2><pre class="line-numbers language-none"><code class="language-none">{{callinTime}}callinTime: '00 小时 00 分 00 秒',获取到的信息里判断   时间是否为0   不为0执行方法countDown(it) {    // let endTime = new Date(this.actEndTime).getTime();    var interval = setInterval(() =&gt; {    let obj = null;    let calTime = this.data.autoRefundMillisecond; // 如果活动未结束，对时间进行处理    if (calTime &gt; 0) {        let time = calTime / 1000; // 获取天、时、分、秒        let day = parseInt(time / (60 * 60 * 24));        let hou = parseInt((time % (60 * 60 * 24)) / 3600);        let min = parseInt(((time % (60 * 60 * 24)) % 3600) / 60);        let sec = parseInt(((time % (60 * 60 * 24)) % 3600) % 60);        obj = {        day: this.timeFormat(day),        hou: this.timeFormat(hou),        min: this.timeFormat(min),        sec: this.timeFormat(sec)        };    } else {        // 活动已结束，全部设置为'00'        clearInterval(interval);    }    this.data.autoRefundMillisecond = this.data.autoRefundMillisecond - 1000;    this.callinTime = obj.day + '天' + obj.hou + '时' + obj.min + '分' + obj.sec + '秒';    }, 1000);},//将小于10的前面加个0timeFormat(param) {    return param &lt; 10 ? '0' + param : param;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="更改时间格式"><a href="#更改时间格式" class="headerlink" title="更改时间格式"></a>更改时间格式</h2><p>将2020-09-04T14:45:27.000+0800 时间格式转化为2020-09-04 14:45:27:</p><pre class="line-numbers language-none"><code class="language-none">getLastTime(val){    return this.getformatDate(val)},getformatDate(data){    var d =new Date(data);    d.month =''+(d.getMonth()+1),    d.day = '' + d.getDate(),    d.year = d.getFullYear();    d.h = '' + d.getHours();    d.m = '' + d.getMinutes();    d.s = '' + d.getSeconds();    if(d.h.length &lt; 2) d.h = '0' + d.h    if(d.m.length &lt; 2) d.m = '0' + d.m;    if (d.s.length &lt; 2) d.s = '0'+ d.s;    if (d.month.length &lt; 2) d.month = '0' + d.month;    if (d.day.length &lt; 2) d.day = '0' + d.day;    return [d.year, d.month, d.day].join('-')+ ' ' +[d.h,d.m,d.s].join(':');}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将2020-09-04 14:45:27时间格式转化为2020-09-04T14:45:27.000+0800:</p><pre class="line-numbers language-none"><code class="language-none">fmtTime (time) {    if (typeof time !== 'string') {        return ' ' // 如果不符合条件,则返回空    }    // 为了适配各种机型,需要把时间转换为符合国际化标准的时间格式,避免iOS和安卓系统不一致    // console.log(time.replace(/-/g, '/'))    let time1 = new Date(time.replace(/-/g, '/').replace('T', ' ')).toISOString() // 转为国际标准化时间    // 截取time前面的年月日    let time2 = time1.split('T')[0]    // 将年月日的‘-’替换为‘/’    let time3 = time2.replace('-', '/')    let time4 = time3.replace('-', '/')    return time1},<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="图片上传及放大查看"><a href="#图片上传及放大查看" class="headerlink" title="图片上传及放大查看"></a>图片上传及放大查看</h2><pre class="line-numbers language-none"><code class="language-none">&lt;el-image :preview-src-list="[data.licenseImgs]"  :src="data.licenseImgs" &gt;&lt;/el-image&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="i提示标签"><a href="#i提示标签" class="headerlink" title="i提示标签"></a>i提示标签</h2><p>方法一:</p><pre class="line-numbers language-none"><code class="language-none">&lt;template v-slot="{row}"&gt;    {{ getStatus(row.auditStatus) }}    &lt;el-tooltip v-if="row.auditStatus == 2" placement="top" effect="light"&gt;        &lt;div slot="content"&gt;{{ row.auditMemo }}&lt;/div&gt;        &lt;i class="el-icon-info" /&gt;    &lt;/el-tooltip&gt;&lt;/template&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方法二:</p><pre class="line-numbers language-none"><code class="language-none">&lt;el-tooltip content="xxxxx内容" placement="top"&gt;    &lt;span style="padding-left:6px;padding-right:6px;background: #ADD8E6;border-radius: 40px;color: #FFFFFF;"&gt;!&lt;/span&gt;&lt;/el-tooltip&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="v-charts的基础用法"><a href="#v-charts的基础用法" class="headerlink" title="v-charts的基础用法"></a>v-charts的基础用法</h2><pre class="line-numbers language-none"><code class="language-none">:settings="name方法名"   :extend="name2方法名2"this.name = {     axisSite: { right: ['较上一时段比较'] },    yAxisType: ['KMB', 'percent'],    yAxisName: ['数值','比率']}this.name2 = {    legend: { show: false },  //隐藏legend    series: {    center: ['50%', '50%']},//自定义颜色color: ["rgba(0, 128, 128, 1)", "rgba(247, 77, 97, 1)", "rgba(245, 154, 35, 1)"],//自定义显示数据显示方式tooltip:{    formatter: params =&gt; {        return `存栏量占比&lt;br/&gt;&lt;i class="el-icon-s-help" style="color:${params.color}"&gt;&lt;/i&gt;  ${params.name} : ${params.value} 户 (${params.percent}%)`    },}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="get请求方法"><a href="#get请求方法" class="headerlink" title="get请求方法"></a>get请求方法</h2><pre class="line-numbers language-none"><code class="language-none">import axios from 'axios'import md5 from 'js-md5'import util from '@/libs/util';shareM(id){    this.isShow = true    const uToken = util.cookies.get('uToken')    axios.get('xxx',{    params:{        scene:id,        page:"pagepack/pages/special/detail"    },    headers:{        lCode:"xxx",        sCode:"xxx",        aToken:md5(md5('xxx' + uToken).toUpperCase())    }    }).then(res=&gt;{    this.image = res.request.responseURL    }).catch(err=&gt;{    this.$message.error(err.message)    })}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 个人整理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
